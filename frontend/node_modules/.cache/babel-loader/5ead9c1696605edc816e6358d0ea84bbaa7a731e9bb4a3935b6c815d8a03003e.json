{"ast":null,"code":"// import React from 'react';\n// import { Link } from 'react-router-dom';\n\n// const QuestionDisplay = ({ generatedQuestions }) => {\n//   const handleSaveQuestions = () => {\n//     const content = generatedQuestions.join('\\n');\n//     const blob = new Blob([content], { type: 'text/plain' });\n//     const url = URL.createObjectURL(blob);\n//     const a = document.createElement('a');\n//     a.href = url;\n//     a.download = 'generated_questions.txt';\n//     document.body.appendChild(a);\n//     a.click();\n//     document.body.removeChild(a);\n//   };\n\n//   return (\n//     <div>\n//       <h2>Generated Questions:</h2>\n//       <div className=\"question-box\">\n//         <ol>\n//           {generatedQuestions.map((question, index) => (\n//             <li key={index} className=\"question-item\">\n//               {question}\n//             </li>\n//           ))}\n//         </ol>\n//       </div>\n//       <button className=\"save-button\" onClick={handleSaveQuestions}>Save Questions</button>\n//       <Link to=\"/\">Back to Home</Link>\n//     </div>\n//   );\n// };\n\n// export default QuestionDisplay;\n\n// import React from 'react';\n// import { Link } from 'react-router-dom';\n\n// const QuestionDisplay = ({ generatedQuestions }) => {\n//   // Parse the JSON string into an array\n//   const questionsObject = JSON.parse(generatedQuestions.questions.join(''));\n//   const questionsArray = questionsObject.question[0];\n\n//   const handleSaveQuestions = () => {\n//     const content = questionsArray.join('\\n');\n//     const blob = new Blob([content], { type: 'text/plain' });\n//     const url = URL.createObjectURL(blob);\n//     const a = document.createElement('a');\n//     a.href = url;\n//     a.download = 'generated_questions.txt';\n//     document.body.appendChild(a);\n//     a.click();\n//     document.body.removeChild(a);\n//   };\n\n//   return (\n//     <div>\n//       <h2>Generated Questions:</h2>\n//       <div className=\"question-box\">\n//         <ol>\n//           {questionsArray.map((question, index) => (\n//             <li key={index} className=\"question-item\">\n//               {question}\n//             </li>\n//           ))}\n//         </ol>\n//       </div>\n//       <button className=\"save-button\" onClick={handleSaveQuestions}>Save Questions</button>\n//       <Link to=\"/\">Back to Home</Link>\n//     </div>\n//   );\n// };\n\n// export default QuestionDisplay;","map":{"version":3,"names":[],"sources":["D:/Scora/frontend/src/components/QuestionDisplay.js"],"sourcesContent":["// import React from 'react';\r\n// import { Link } from 'react-router-dom';\r\n\r\n// const QuestionDisplay = ({ generatedQuestions }) => {\r\n//   const handleSaveQuestions = () => {\r\n//     const content = generatedQuestions.join('\\n');\r\n//     const blob = new Blob([content], { type: 'text/plain' });\r\n//     const url = URL.createObjectURL(blob);\r\n//     const a = document.createElement('a');\r\n//     a.href = url;\r\n//     a.download = 'generated_questions.txt';\r\n//     document.body.appendChild(a);\r\n//     a.click();\r\n//     document.body.removeChild(a);\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>Generated Questions:</h2>\r\n//       <div className=\"question-box\">\r\n//         <ol>\r\n//           {generatedQuestions.map((question, index) => (\r\n//             <li key={index} className=\"question-item\">\r\n//               {question}\r\n//             </li>\r\n//           ))}\r\n//         </ol>\r\n//       </div>\r\n//       <button className=\"save-button\" onClick={handleSaveQuestions}>Save Questions</button>\r\n//       <Link to=\"/\">Back to Home</Link>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default QuestionDisplay;\r\n\r\n// import React from 'react';\r\n// import { Link } from 'react-router-dom';\r\n\r\n// const QuestionDisplay = ({ generatedQuestions }) => {\r\n//   // Parse the JSON string into an array\r\n//   const questionsObject = JSON.parse(generatedQuestions.questions.join(''));\r\n//   const questionsArray = questionsObject.question[0];\r\n\r\n//   const handleSaveQuestions = () => {\r\n//     const content = questionsArray.join('\\n');\r\n//     const blob = new Blob([content], { type: 'text/plain' });\r\n//     const url = URL.createObjectURL(blob);\r\n//     const a = document.createElement('a');\r\n//     a.href = url;\r\n//     a.download = 'generated_questions.txt';\r\n//     document.body.appendChild(a);\r\n//     a.click();\r\n//     document.body.removeChild(a);\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>Generated Questions:</h2>\r\n//       <div className=\"question-box\">\r\n//         <ol>\r\n//           {questionsArray.map((question, index) => (\r\n//             <li key={index} className=\"question-item\">\r\n//               {question}\r\n//             </li>\r\n//           ))}\r\n//         </ol>\r\n//       </div>\r\n//       <button className=\"save-button\" onClick={handleSaveQuestions}>Save Questions</button>\r\n//       <Link to=\"/\">Back to Home</Link>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default QuestionDisplay;\r\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}